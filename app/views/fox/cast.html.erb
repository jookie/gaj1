<!--
Documentation Dov Peles
-->
<!DOCTYPE html>
<html lang="en">

<head>
  <title>Multi Cameras and Many Viewers</title>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">

  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <link rel="stylesheet" href="//cdn.webrtc-experiment.com/style.css">

  <script>
      document.createElement('article');

  </script>

  <!-- scripts used for WebRTC connections -->
  <script src="//cdn.webrtc-experiment.com/RTCMultiConnection.js"></script>
  <script src="//cdn.webrtc-experiment.com/firebase.js"></script>
</head>

<body>
<article>
  <header style="text-align: center;">
    <h1>Multi Cameras and Many Viewers</h1>
    <p>
      <a href="https://www.dov.com/">HOME</a>
      <a href="http://www.dov.com/" target="_blank">Dov Peles 1</a> .
      <a href="http://twitter.com/dov" target="_blank" title="Dov Peles 2">Dov Peles2</a> .
    </p>
  </header>

  <div class="github-stargazers"></div>

  <!-- just copy this <section> and next script -->
  <section class="experiment">
    <h2>Your Role?</h2>
    <br />
    <br />
    <select>
      <option>Broadcaster</option>
      <option>Anonymous Viewer</option>
      <option>Room Moderator</option>
    </select>
    <button>Continue</button>
    <br />

    <div id="videos"></div>
  </section>
  <section class="experiment">
    <h2>How it works?</h2>
    <ol>
      <li>There can be random number of broadcasters.</li>
      <li>All broadcasters will be interconnected!</li>
      <li>All broadcasters can see/talk with each other!</li>
      <li>There can be random number of anonymous viewers.</li>
      <li>All viewers can watch/listen videos from all broadcasters!</li>
    </ol>
    <h2>Real-life scenarios?</h2>
    <ol>
      <li>5 CEOs can setup a presentation with many employees!</li>
      <li>5 Teachers can teach many students in the same room!</li>
      <li>Two ore more doctors can inspect two or more patients while LIVE teaching many students!</li>
    </ol>
    <h2>How to use it?</h2>
    <ol>
      <li>1st Tab: There MUST always be a room-moderator. Select "Room Moderator" and click "continue".</li>
      <li>2nd Tab: Select "Anonymous Viewer" if you want to anonymously watch/listen all videos.</li>
      <li>3rd Tab: Select "Broadcaster" if you want to setup two-way or multi-directional video chat with all other broadcasters.</li>
    </ol>
  </section>

  <script>
      var select = document.querySelector('select');
      var button = document.querySelector('button');
      var videos = document.querySelector('#videos');

      button.onclick = function() {
          this.disabled = true;

          var role = select.value;

          window.connection = new RTCMultiConnection();

          // dont-override-session allows you force RTCMultiConnection
          // to not override default session of participants;
          // by default, session is always overridden and set to the session coming from initiator!
          connection.dontOverrideSession = true;

          connection.session = {
              audio: true,
              video: true,
              oneway: role == 'Anonymous Viewer'
          };

          connection.onstream = function(e) {
              videos.appendChild(e.mediaElement);

              if (e.type == 'remote') {
                  // because "viewer" joined room as "oneway:true"
                  // initiator will NEVER share participants
                  // to manually ask for participants;
                  // call "askToShareParticipants" method.
                  connection.askToShareParticipants();
              }

              // if you're moderator
              // if stream-type is 'remote'
              // if target user is broadcaster!
              if (connection.isInitiator && e.type == 'remote' && !e.session.oneway) {
                  // call "shareParticipants" to manually share participants with all connected users!
                  connection.shareParticipants({
                      dontShareWith: e.userid
                  });
              }
          };

          connection.onNewSession = function(session) {
              if (role == 'Anonymous Viewer') {
                  session.join({
                      oneway: true
                  });
              }

              if (role == 'Broadcaster') {
                  session.join();
              }
          };

          if (role == 'Room Moderator')
              connection.open({
                  sessionid: connection.channel,
                  captureUserMediaOnDemand: false
              });
          else
              connection.connect(connection.channel);
      };
  </script>

  <section class="experiment">
    <h2 class="header" id="feedback">Feedback</h2>
    <div>
      <textarea id="message" style="border: 1px solid rgb(189, 189, 189); height: 8em; margin: .2em; outline: none; resize: vertical; width: 98%;" placeholder="Have any message? Suggestions or something went wrong?"></textarea>
    </div>
    <button id="send-message" style="font-size: 1em;">Send Message</button>
    <small style="margin-left: 1em;">Enter your email too; if you want "direct" reply!</small>
  </section>


</article>



</body>

</html>